-- base64 format: [encoded: ICFP string] [prefix: ICFP integer]
-- encoded string is decoded to LRDU string and then first prefix characters are taken

-- Finally take prefix
BT

-- String length
@I9630

-- Pass the encoded string
B$

-- Bind the expanded dictionary
B$
L#
  -- Make the recursive function of Decode
  B$
    Lf B$ Lx B$ vf B$ vx vx Lx B$ vf B$ vx vx -- Fix

      -- Decode :: Self -> String -> String
      -- Decodes the first entry in the source then recursively process the rest.
      Ld Ls
        ? ( B= vs @I4 )
          S
          B.
            BT @I2 BD (B* @I2 B% vs @I4) v# -- Decode the first entry
            (B$ vd (B/ vs @I4)) -- Process the rest

-- Expand the compressed dictionary
-- The compressed data must contain a non-zero sentinel in the end.
BT @I8
-- Apply the compressed dictionary to obtain the dict
B$

-- Make the recursive Expand function
B$
-- Fix
Lf B$ Lx B$ vf B$ vx vx Lx B$ vf B$ vx vx

-- Expand :: Self -> Int -> String
Le Lp
  ? (B= vp @I0)
    S
    B.
      BT @I1 BD (B% vp @I4) @SLRDU
      B$ ve (B/ vp @I4)
@I110341

-- Encoded string
@I37216900983854278377930931475122919660875752973662386626123068493880442393863739026314707847046095112064998927315347728574096273586990663822813876184660711027465405948418841930618212044199092810714890516639239161446839205188515142812011710009873717731318152141729012173245819975991785822739354998987997891919918766961128941084154617603813814438771636202033107802399459250364242789122012194392789019951433897854914181287090589247336453431516008980493996666130755732535977384121680896962388317628434805196061618546272113748644143018002849468612046608841146304002086545808202722384653014940971849090290726874964814350027188316265300370294580883694207119781432334892028635986037745427745647972716376977360216522967442019316278102441763670283255594433973283901670959702593658438739344848533394581432334335529935362392385543038307824573244373561255712346352931715150008172200286813177456445864020103896982046136585694434412534005001897905147608568542905756460402285616389024135709873874036318388904051161268567613145246119279085004365014300523431386971288867388919196332118642552980147810770526357180192639446190770578996252822080509517795888022925300328717887512332395703048461374607733711725438303426687872401316117013008561461541231906915810541142118389021937998482916331368680965951391612317859311217234353839482036921890796419446270595869717516484524850578354902411942458052526950875608307613292600027612125295033686446800215097991043405943027830129393807034089057320145574760744043478928548292630812158286443172955075031162394145446903769139711796479926569169561098122607782190900247818793106664449976149206599765545094318944427462039063708532942272843793334258117188094086307647766447972877383292608593241131583078080098352109678802073814662094844136824273207763871138408381323543515889040164514481654594793909074547678038328649249348745380315049564256257174494758088354953597521427963742477778528613159387725865894029862872059460174521435435028161265144758124366932344884071803404952642318383901136485656404389583866443525315814604513235679073689727116404507424075961457242818536602021817258901449495966545923645509838070339628798739385004110896249321759251357922130344965627949926997818796102387084641139738685599439730492187727209220258562463160904325971184887609090548989251371129140509918909648669808025678412641348506728035767188367538209759748530174376184155946892975271685368760250243811941735599007626644738861749206455735913670092265422688072382828545026445415774337510418362099927807558256713554555249698178258537773962561049059053846022726351068988599300806777814022871866499067390871389111205420642781655017807398236380754413661777529234789216997720794703351997643709652687229354735114554369642165531988320381704593443161940724874590538529050211947714541213574686952295261862051962948518196468728967455628874787798598143401788008091798096901837012257224163344609121309536585435668142416


