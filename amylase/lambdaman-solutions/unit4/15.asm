-- base64 format: [encoded: ICFP string] [prefix: ICFP integer]
-- encoded string is decoded to LRDU string and then first prefix characters are taken

-- Finally take prefix
BT

-- String length
@I9594

-- Pass the encoded string
B$

-- Make the recursive function of Decode
B$
  Lf B$ Lx B$ vf B$ vx vx Lx B$ vf B$ vx vx -- Fix
  -- Decode :: Self -> String -> String
  -- Decodes the first entry in the source then recursively process the rest.
  Ld Ls
    ? ( B= vs @I16 )
      S
      B.
        BT @I4 BD (B* @I4 B% vs @I16) @SLLLLDDLLUUDDLLUULLDDDDRRRRRRUULLUUUURRLLDDDDUURRRRDDDDUULLRRRRUU -- Decode the first entry
        (B$ vd (B/ vs @I16)) -- Process the rest

-- Encoded string
@I7953806189552227405044446062360844372741482936890427581864556061340142016178179746578426430064988025107378971172987468229204976285127163127247079489600973472772277469901089169539152480486667119049847225775244377275374962722378636581780059226282153612239477774094700164931485156663202632726164955404194815180011514476041680473770506949433735636296095013877360164195294509271073057947754182241210680481080565380647740834796827147209857257296064681936136467408810258540299927402550074720923918858153142528929280096230261978024323646671374504104640132632767196155199242157666809716335250132119060324611994120353986540365972250553222640191791087488649424436762413138801511468946428047543537788969850606865052896005797367232893474849392414720645815768692850856652433051177122257694985334515104358047385172269367010048251784688763709626500222586808146007618852886945676104050402379427984895011702421640499982982619780992773392810020067541502152376222080293304227613581117597934982495782775488406494539601413506017446051842328329463576729419224532241070850267768939752308132276614438169456151903199642505974659078153283069907998069114059855352069126422187765847587624192335212851968076104195286900689313838128591726944656821939903204951703693312001249769245813044300592327297058205619670128261343350694605292532090765707103387958533693967930932798985477509990278075870444471571351884027416827564682895436409396012640558594044447205061226932325237373934497687400121713303049297398134143644813964341213712943152321574100178333623452589122926179718050572719466117172149483126406781766480610365119583685002305311396468390217941730553996715779267757331537580377242546171512253016442776618713092007501315649953589657713947328857396544792268224247645576697413848102678421392274238852014337909727300542875696307151593356983986194604201513440460628332241095943337744945991116543858676120930026177791974696603900381617577753452970160079402083382271747392328086499264846505369328923869556407333413828049165627603801007021313532893861726263682173390163842235962213873263798665684215748692793417190627773141472914273738263632493759541488525164589385812955576475175040523813891471696932853225807102396185688803984232306946712881842649940742966521947308206759262490263134522986956207369783224439981733545620654008185509421216629187729611152204679557950091394880992092834098904080576183598084031239420371289835475434323769140996176157399668663513173455946274240201551832074351544368487928993423672608361428908532518231756119793011245107260823910278553139695763560251577169885992849579644783707584295802313932403166373637427834483481730307069845197216157849822018368219890904297373396434632631971530126697999425284829847950364436205889166246302098111525379569370577713961542978398607399583806229618973816849206318346555066410480971457800906624453074011602827325530332702658488082677414629658936061761251677250531856

