-- base64 format: [encoded: ICFP string] [prefix: ICFP integer]
-- encoded string is decoded to LRDU string and then first prefix characters are taken

-- Finally take prefix
BT

-- String length
@I4899

-- Pass the encoded string
B$

-- Bind the expanded dictionary
B$
L#
  -- Make the recursive function of Decode
  B$
    Lf B$ Lx B$ vf B$ vx vx Lx B$ vf B$ vx vx -- Fix

      -- Decode :: Self -> String -> String
      -- Decodes the first entry in the source then recursively process the rest.
      Ld Ls
        ? ( B= vs @I4 )
          S
          B.
            BT @I1 BD (B* @I1 B% vs @I4) v# -- Decode the first entry
            (B$ vd (B/ vs @I4)) -- Process the rest

-- Expand the compressed dictionary
-- The compressed data must contain a non-zero sentinel in the end.
BT @I4
-- Apply the compressed dictionary to obtain the dict
B$

-- Make the recursive Expand function
B$
-- Fix
Lf B$ Lx B$ vf B$ vx vx Lx B$ vf B$ vx vx

-- Expand :: Self -> Int -> String
Le Lp
  ? (B= vp @I0)
    S
    B.
      BT @I1 BD (B% vp @I4) @SLRDU
      B$ ve (B/ vp @I4)
@I370

-- Encoded string
@I13449917278033413747708912603361317376403008606822857217185445275783603319938374473070367211198551098166181241879218338980217595047245753313540294097854280621453790856988673030848384727470587581311544468128217922546617082604363272659806422485262630205020622140998186904028282651629602514158321103855534376312648692694884210813966950969293872351311586142759506799426551033327282615085716105173899626849082547195784568633446935038745146792479732398862499935512170521249365229434896458356333565084120509546654803643922833075307019313112772285800272190210252434547750444860570613338879353024875216501155457520063794811922724529894288509973276303959050193807723342884641665477257912781571697989103509388644923278531456417469219865957042705588391701821758411129978242252230842784758165340407250165522958249321333807692829360139280104731009498653344640046648440488605464710020101949151128125997265409055792328093511464898048331811586601233128108445449761973957842691899612574395193770944626957833072432151480253812417279198923446688912268308294826086176934270405294779933918348065053462721609025102009886645156484203487688898407372691249189465148908841410509870931466234057905918631889279389653776965591937781338348407828176025388896891001316596253038731759929821605267345853287135575327745135435207128196259570823966015851315887181166391837645091389498638386740223087261137992113389621741355731244274254108800167950573162687533089860593752742593753473899429028995451348576366588478646548235020501172783826393838933353286169446876141494500115057048865937616769148623977814667323365537130345976698372878358603933289932566909431005182261623297043968601551634196777526251983396877110332370607617752771233213840110397424983308788155125682342051136116084575228083123378701192959467491080916645261046823704786318072765317868752627500766514077281626530871843701079353955399200915221690713456913369832439907180363902458576159303448768402086110169687789262298468018498547211558955592574908315328274999608092534879976623106314770233263636915345658030173160732761391833972353451706120034375826691941885983146914913421463178269193037409744064372747452844140692320209540643211280899937605587605509466617901617100218387428291421640124167508470380622035104890550597602725718687691638478423516696373856484949814661877170208668733201974814056365892654377215573356863629155987605971376731486516728155346739245364571478017093229512643046004073824650037530529498025586437701639920805555954550477599208179820155854201325801401823405230837447998976946044036978365610807280723291515269316424182036222829012816759102169688844635963592277429354962804871219588770741285862664347618397548200764456880228173814675125368956520107224540130192690083621465470013359240464110041275969036165071279753716659138118489416179895140139662192509382935456524917595206797983693840497867837411196570260256386204053412660418655814092175227707175526576717577347446696619032335018837984282321002816318032


