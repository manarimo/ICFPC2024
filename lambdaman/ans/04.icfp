-- base64 format: [encoded: ICFP string] [prefix: ICFP integer]
-- encoded string is decoded to LRDU string and then first prefix characters are taken

-- Finally take prefix
BT

-- String length
@I348

-- Pass the encoded string
B$

-- Make the recursive function of Decode
B$
  Lf B$ Lx B$ vf B$ vx vx Lx B$ vf B$ vx vx -- Fix
  -- Decode :: Self -> String -> String
  -- Decodes the first entry in the source then recursively process the rest.
  Ld Ls
    ? ( B= vs S )
      S
      B.
        BT @I2 BD (B* @I2 U# (BT @I1 vs)) @SLLDDRRUU -- Decode the first entry
        (B$ vd (BD @I1 vs)) -- Process the rest

-- Encoded string
S#!"!#$!!$!$#!"#"#$$""#$$####!"###!$#!"!!$!!!"##""!#"!"!$"#"#!"""$#"$#"$!!$!""$$$!"""!#$!!"$$#$"!"##$$$!$#!$""!"$$$$"""##"#"#$$$#$##!$###!"#"""!#"!#$$$!!#"!!$"!#"#"!!##""##!$#
